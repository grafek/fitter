generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String?   @unique
  emailVerified DateTime?
  image         String
  accounts      Account[]
  sessions      Session[]
  posts         Post[]

  @@unique([id, name, image])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Post {
  id           String   @id @default(cuid())
  creator      User?    @relation(fields: [creatorId, creatorName, creatorImage], references: [id, name, image])
  creatorName  String?
  creatorId    String?
  creatorImage String?
  title        String
  description  String
  sport        String
  workoutDate  DateTime
  image        String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
